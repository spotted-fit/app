name: Release Android

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

concurrency:
  group: android-release-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Decode keystore
        run: |
          mkdir -p ~/.android
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > ~/.android/keystore.jks

      - name: Build & sign APK
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$HOME/.android/keystore.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
        env:
          BASE_URL: ${{ secrets.PROD_BASE_URL }}

      - name: Locate APK
        id: find_apk
        run: |
          APK_PATH=$(find composeApp/build/outputs/apk/release -name '*.apk' | head -n1)
          if [ -z "$APK_PATH" ]; then
            echo "::error::No APK found in composeApp/build/outputs/apk/release"
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV

      - name: Normalize APK filename
        run: |
          cp "$APK_PATH" spotted.apk
          echo "STANDARD_APK=spotted.apk" >> $GITHUB_ENV

      - name: Create or update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Android Release ${{ github.ref_name }}"
          body: |
            Automated build for ${{ github.ref_name }}
            â€¢ Commit: ${{ github.sha }}
          files: ${{ env.STANDARD_APK }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
